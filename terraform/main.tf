provider "aws" {
  region = var.region
}

# State backend - use S3 for production, but this is commented out for initial setup
# terraform {
#   backend "s3" {
#     bucket         = "terrafusion-terraform-state"
#     key            = "terraform.tfstate"
#     region         = "us-west-2"
#     encrypt        = true
#     dynamodb_table = "terrafusion-terraform-locks"
#   }
# }

# VPC Module
module "vpc" {
  source = "./modules/vpc"

  region             = var.region
  prefix             = var.prefix
  vpc_cidr           = var.vpc_cidr
  availability_zones = var.availability_zones
  tags               = var.tags
}

# EKS Module
module "eks" {
  source = "./modules/eks"

  region            = var.region
  prefix            = var.prefix
  vpc_id            = module.vpc.vpc_id
  vpc_cidr          = var.vpc_cidr
  subnet_ids        = module.vpc.private_subnet_ids
  kubernetes_version = var.kubernetes_version
  
  node_instance_types = var.node_instance_types
  node_desired_size   = var.node_desired_size
  node_min_size       = var.node_min_size
  node_max_size       = var.node_max_size
  node_capacity_type  = var.node_capacity_type
  
  tags = var.tags

  depends_on = [module.vpc]
}

# RDS Module
module "rds" {
  source = "./modules/rds"

  region              = var.region
  prefix              = var.prefix
  vpc_id              = module.vpc.vpc_id
  subnet_ids          = module.vpc.private_subnet_ids
  eks_security_group_id = module.eks.cluster_security_group_id
  
  allocated_storage     = var.db_allocated_storage
  max_allocated_storage = var.db_max_allocated_storage
  instance_class        = var.db_instance_class
  db_name               = var.db_name
  db_username           = var.db_username
  db_password           = var.db_password
  
  multi_az               = var.db_multi_az
  backup_retention_period = var.db_backup_retention_period
  skip_final_snapshot    = var.db_skip_final_snapshot
  deletion_protection    = var.db_deletion_protection
  
  tags = var.tags

  depends_on = [module.vpc, module.eks]
}

# S3 Buckets
module "s3_attachments" {
  source = "./modules/s3"

  region      = var.region
  prefix      = var.prefix
  bucket_name = "attachments"
  
  enable_versioning   = true
  enable_cors         = true
  cors_allowed_origins = ["https://*.terrafusion.pro"]
  create_iam_user     = true
  
  tags = var.tags
}

module "s3_backups" {
  source = "./modules/s3"

  region      = var.region
  prefix      = var.prefix
  bucket_name = "backups"
  
  enable_versioning = true
  lifecycle_expiration_days = 365
  noncurrent_version_expiration_days = 30
  
  tags = var.tags
}

# Output connection strings for application
resource "local_file" "env_file" {
  content = <<-EOT
    # TerraFusion Production Environment Settings
    # Generated by Terraform - DO NOT EDIT MANUALLY

    # Database Connection
    DATABASE_URL=${module.rds.db_instance_connection_string}

    # S3 Attachment Storage
    S3_REGION=${var.region}
    S3_BUCKET=${module.s3_attachments.bucket_id}
    S3_ACCESS_KEY=${module.s3_attachments.iam_access_key_id}
    # Secret key should be retrieved from AWS Secrets Manager
    # Secret ARN: ${module.s3_attachments.s3_credentials_secret_arn}

    # Kubernetes Config Command
    # ${module.eks.kubectl_config_command}
  EOT
  filename = "../.env.production.example"
}