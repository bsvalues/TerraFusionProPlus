apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.7.1
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        env:
        - name: ELASTICSEARCH_HOSTS
          value: http://elasticsearch-api:9200
        - name: SERVER_NAME
          value: kibana.monitoring.svc.cluster.local
        ports:
        - containerPort: 5601
          name: http
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 120
          timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5601
    protocol: TCP
    name: http
  selector:
    app: kibana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: kibana-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
  - hosts:
    - kibana.terrafusion.pro
    secretName: kibana-tls
  rules:
  - host: kibana.terrafusion.pro
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: kibana-basic-auth
  namespace: monitoring
type: Opaque
# This is for example purposes only - use a secure password in production
# Will be replaced during deployment via CI/CD
data:
  auth: YWRtaW46JGFwcjEkSHlVMVpyZ1YkWUVJaUVsNHU3RlpFT0dpL0RLU1lzLgo= # admin:admin