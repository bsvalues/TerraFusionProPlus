name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Deploy frontend to S3
        run: |
          aws s3 sync dist/public/ s3://terrafusionpro-staging-frontend/ --delete
          
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGING_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          
      - name: Deploy backend to ECS
        run: |
          aws ecs update-service --cluster terrafusionpro-staging --service terrafusionpro-api --force-new-deployment
          
      - name: Wait for ECS deployment
        run: |
          aws ecs wait services-stable --cluster terrafusionpro-staging --services terrafusionpro-api
          
      - name: Run smoke tests
        run: |
          echo "Running smoke tests for staging environment"
          curl -f https://staging-api.terrafusion.com/api/health || exit 1
          
      - name: Notify deployment success
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'deployments'
          slack-message: "üöÄ Successfully deployed to staging! Check it out: https://staging.terrafusion.com"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
      - name: Notify deployment failure
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'deployments'
          slack-message: "‚ùå Failed to deploy to staging! Check the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
